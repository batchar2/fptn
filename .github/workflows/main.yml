name: Build and Test

on:
  push:
    branches:
      - dev 
      - master
    tags:
      - '*'
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [Ubuntu_x86_64, Ubuntu_ARM64, MacOS_ARM64]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true 

      - name: Set env
        if: github.event_name == 'release'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Print Release Version
        if: github.event_name == 'release'
        run: |
          echo "Release Version: $RELEASE_VERSION"
          echo "Release Version from env: ${{ env.RELEASE_VERSION }}"

      - name: Update FPTN_VERSION in conanfile.py (Linux)
        if: runner.os == 'Linux' && github.event_name == 'release'
        run: |
          sed -i "s/^FPTN_VERSION = \".*\"/FPTN_VERSION = \"$RELEASE_VERSION\"/" conanfile.py

      - name: Update FPTN_VERSION in conanfile.py (MacOS)
        if: runner.os == 'MacOS' && github.event_name == 'release'
        run: |
          sed -i '' "s/^FPTN_VERSION = \".*\"/FPTN_VERSION = \"$RELEASE_VERSION\"/" conanfile.py

      - name: Install dependencies (Linux)
        run: |
          conan install . --output-folder=build --build=missing --settings build_type=Release

      - name: Install dependencies (MacOS)
        if: runner.os == 'MacOS'
        run: |
          conan install . --output-folder=build --build=missing -o with_gui_client=True --settings build_type=Release

      - name: Build
        run: |
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .
      
      - name: Test
        run: |
          cd build
          ctest

      - name: Build Debian package
        if: runner.os == 'Linux'
        run: |
          cd build
          cmake --build . --target build-deb

      - name: Upload deb
        if: runner.os == 'Linux' && github.event_name == 'release'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: "fptn-*.deb"
          repo-token: ${{ secrets.CI_TOKEN }}

      - name: Build MacOS pkg
        if: runner.os == 'MacOS'
        run: |
          cd build
          cmake --build . --target build-pkg

      - name: Upload macOS pkg
        if: runner.os == 'MacOS' && github.event_name == 'release'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.pkg"
          repo-token: ${{ secrets.CI_TOKEN }}
