name: Build and Test

on:
  push:
    branches:
      - dev
      - master
    tags:
      - '*'
  release:
    types: [published]

jobs:
  build_ubuntu_x86_64:
    runs-on: Ubuntu_x86_64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set env
        if: github.event_name == 'release'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Print Release Version
        if: github.event_name == 'release'
        run: |
          echo "Release Version: $RELEASE_VERSION"
      - name: Update FPTN_VERSION in conanfile.py
        if: github.event_name == 'release'
        run: |
          sed -i "s/^FPTN_VERSION = \".*\"/FPTN_VERSION = \"$RELEASE_VERSION\"/" conanfile.py
      - name: Install dependencies
        run: |
          conan install . --output-folder=build --build=missing -o with_gui_client=True --settings build_type=Release -s compiler.cppstd=17
      - name: Build
        run: |
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .
      - name: Test
        run: |
          cd build
          ctest -C Release
      - name: Build Debian package
        run: |
          cd build
          cmake --build . --target build-deb
          cmake --build . --target build-deb-gui
      - name: Upload deb
        if: github.event_name == 'release'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: "fptn-*.deb"
          repo-token: ${{ secrets.CI_TOKEN }}
  build_ubuntu_arm64:
    runs-on: Ubuntu_ARM64_Desktop
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set env
        if: github.event_name == 'release'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Print Release Version
        if: github.event_name == 'release'
        run: |
          echo "Release Version: $RELEASE_VERSION"
      - name: Update FPTN_VERSION in conanfile.py
        if: github.event_name == 'release'
        run: |
          sed -i "s/^FPTN_VERSION = \".*\"/FPTN_VERSION = \"$RELEASE_VERSION\"/" conanfile.py
      - name: Install dependencies
        run: |
          conan install . --output-folder=build --build=missing -o with_gui_client=True --settings build_type=Release -s compiler.cppstd=17
      - name: Build
        run: |
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .
      - name: Test
        run: |
          cd build
          ctest -C Release
      - name: Build Debian package
        run: |
          cd build
          cmake --build . --target build-deb
          cmake --build . --target build-deb-gui
      - name: Upload deb
        if: github.event_name == 'release'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: "fptn-*.deb"
          repo-token: ${{ secrets.CI_TOKEN }}
  build_macos_arm64:
    runs-on: MacOS_ARM64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set env
        if: github.event_name == 'release'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Print Release Version
        if: github.event_name == 'release'
        run: |
          echo "Release Version: $RELEASE_VERSION"
      - name: Update FPTN_VERSION in conanfile.py
        if: github.event_name == 'release'
        run: |
          sed -i '' "s/^FPTN_VERSION = \".*\"/FPTN_VERSION = \"$RELEASE_VERSION\"/" conanfile.py
      - name: Install dependencies
        run: |
          conan install . --output-folder=build --build=missing -o with_gui_client=True --settings build_type=Release -s compiler.cppstd=17
      - name: Build
        run: |
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build .
      - name: Test
        run: |
          cd build
          ctest -C Release
      - name: Build MacOS pkg
        run: |
          cd build
          cmake --build . --target build-pkg
      - name: Upload macOS pkg
        if: github.event_name == 'release'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.pkg"
          repo-token: ${{ secrets.CI_TOKEN }}
  build_windows_AMD64:
    runs-on: Windows11_AMD64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set env
        shell: powershell
        if: github.event_name == 'release'
        run: |
          $releaseVersion = "${{ github.ref_name }}"
          echo "RELEASE_VERSION=$releaseVersion" >> $env:GITHUB_ENV
      - name: Print Release Version
        shell: powershell
        if: github.event_name == 'release'
        run: |
          Write-Output "Release Version: $env:RELEASE_VERSION"
      - name: Update FPTN_VERSION in conanfile.py
        shell: powershell
        if: github.event_name == 'release'
        run: |
          python.exe deploy\windows\conan-replace-version.py conanfile.py "$env:RELEASE_VERSION"
      - name: Install dependencies
        shell: powershell
        run: |
          conan install . --output-folder=build --build=missing -o with_gui_client=True --settings build_type=Release -s compiler.cppstd=17
      - name: Build
        shell: powershell
        run: |
          cd build
          cmake .. -G "Visual Studio 17 2022" -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Test
        shell: powershell
        run: |
          cd build
          ctest -C Release
      - name: Build Windows installer
        shell: powershell
        run: |
          cd build
          cmake --build . --config Release --target build-installer
      - name: Zip the .exe
        shell: powershell
        run: |
          $exePath = Get-ChildItem -Path "." -Filter "FptnClientInstaller-*-windows-x64_x86.exe" | Select-Object -First 1
          Compress-Archive -Path $exePath.FullName -DestinationPath "FptnClientInstaller-$env:RELEASE_VERSION-windows-x64_x86.zip"
      - name: Upload Windows installer
        if: github.event_name == 'release'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.zip"
          repo-token: ${{ secrets.CI_TOKEN }}
